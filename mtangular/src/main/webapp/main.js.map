{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/model/commonUtils.ts","webpack:///./src/app/model/posts.ts","webpack:///./src/app/model/quotes.ts","webpack:///./src/app/model/user.ts","webpack:///./src/app/post/post.component.css","webpack:///./src/app/post/post.component.html","webpack:///./src/app/post/post.component.ts","webpack:///./src/app/quote/quote.component.css","webpack:///./src/app/quote/quote.component.html","webpack:///./src/app/quote/quote.component.ts","webpack:///./src/app/service/authentication.service.ts","webpack:///./src/app/service/postinfo.service.ts","webpack:///./src/app/service/quoteinfo.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".card{\\nbox-shadow: 0 4px 8px 0 rgba(0, 0, 0,0.2);\\ntransition: 0.3s;\\nwidth: 500px;\\nheight: 320px;\\nmargin: auto;   \\n\\n}\\n\\n.container {\\n    padding: 40px 70px;   \\n}\\n\\nbody {background-color: coral;}\\n\\n#over img {\\n\\tmargin-left: auto;\\n\\tmargin-right: auto;\\n\\tdisplay: block;\\n}\\n\\n.panel-table .panel-body{\\n\\tpadding:0;\\n  }\\n\\n.panel-table .panel-body .table-bordered{\\n\\tborder-style: none;\\n\\tmargin:0;\\n  }\\n\\n.panel-table .panel-body .table-bordered > thead > tr > th:first-of-type {\\n\\t  text-align:center;\\n\\t  width: 100px;\\n  }\\n\\n.panel-table .panel-body .table-bordered > thead > tr > th:last-of-type,\\n  .panel-table .panel-body .table-bordered > tbody > tr > td:last-of-type {\\n\\tborder-right: 0px;\\n  }\\n\\n.panel-table .panel-body .table-bordered > thead > tr > th:first-of-type,\\n  .panel-table .panel-body .table-bordered > tbody > tr > td:first-of-type {\\n\\tborder-left: 0px;\\n  }\\n\\n.panel-table .panel-body .table-bordered > tbody > tr:first-of-type > td{\\n\\tborder-bottom: 0px;\\n  }\\n\\n.panel-table .panel-body .table-bordered > thead > tr:first-of-type > th{\\n\\tborder-top: 0px;\\n  }\\n\\n.panel-table .panel-footer .pagination{\\n\\tmargin:0; \\n  }\\n\\n/*\\n  used to vertically center elements, may need modification if you're not using default sizes.\\n  */\\n\\n.panel-table .panel-footer .col{\\n   line-height: 34px;\\n   height: 34px;\\n  }\\n\\n.panel-table .panel-heading .col h3{\\n   line-height: 30px;\\n   height: 30px;\\n  }\\n\\n.panel-table .panel-body .table-bordered > tbody > tr > td{\\n\\tline-height: 34px;\\n  }\\n  \\n  \"","module.exports = \"<nav class=\\\"navbar navbar-expand-xl bg-light navbar-light  ml-auto\\\" *ngIf=\\\"isLoggedIn$ | async\\\" >\\n    <div class=\\\"collapse navbar-collapse\\\">\\n        <ul class=\\\"nav navbar-nav\\\">\\n            <li class=\\\"nav-item\\\" routerlinkactive=\\\"active current\\\">\\n                <a [routerLink]=\\\"['/post']\\\"  class=\\\"nav-link\\\"><b>Post</b></a>\\n            </li>\\n            <li class=\\\"nav-item\\\" routerlinkactive=\\\"active current\\\">\\n                <a [routerLink]=\\\"['/quote']\\\" class=\\\"nav-link\\\"><b>Quotes</b></a>\\n            </li>\\n        </ul>\\n        <ul class=\\\"nav navbar-nav ml-auto\\\">\\n                <li class=\\\"nav-item\\\" routerlinkactive=\\\"active current\\\">\\n                        <a (click)=\\\"logout()\\\" [routerLink]=\\\"['/login']\\\" class=\\\"nav-link\\\"><b>logout</b></a>\\n                    </li>\\n            </ul>\\n    </div>\\n</nav>\\n\\n<!-- <mat-toolbar color=\\\"primary\\\">\\n    <span>\\n      Angular NavBar + Login Example #01\\n    </span>\\n    <span class=\\\"fill-remaining-space\\\"></span>\\n    <button mat-button>Menu Option 01</button>\\n    <button mat-button>Menu Option 02</button>\\n    <button mat-button routerLink=\\\"login\\\">Login</button>\\n    <button mat-button (click)=\\\"onLogout()\\\">Logout</button>\\n  </mat-toolbar> -->\\n\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { logging } from 'protractor';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { NgModuleDefinition } from '@angular/core/src/view';\nimport { Observable } from 'rxjs/Observable';\nimport { AuthenticationService } from './service/authentication.service';\nimport { PostComponent } from './post/post.component';\nimport { QuoteComponent } from './quote/quote.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n  isLoggedIn$:Observable<boolean>;\n  ngOnInit() {\n    this.isLoggedIn$=this.authenticateservice.isLoggedIn;\n  }\n\n  constructor(private authenticateservice: AuthenticationService)\n  {\n  \n  }\n\n  logout()\n  {\n   // localStorage.removeItem(\"loggeduser\")\n  //  this.isLoggedIn$=false;\n  this.authenticateservice.logout();\n  }\n}\n\n\nexport const routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'home', component: HomeComponent },\n  { path: 'post', component: PostComponent },\n  { path: 'quote', component: QuoteComponent },\n  { path: '#', redirectTo: '' }\n];\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { AppComponent, routes } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RouterModule } from '@angular/router';\nimport { AuthenticationService } from './service/authentication.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport { HomeComponent } from './home/home.component';\nimport { PostComponent } from './post/post.component';\nimport { PostinfoService } from './service/postinfo.service';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { QuoteComponent } from './quote/quote.component';\nimport { QuoteinfoService } from './service/quoteinfo.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    PostComponent,\n    QuoteComponent\n  ],\n  imports: [\n    BrowserModule,FormsModule,RouterModule.forRoot(routes),HttpClientModule,\n    NgxPaginationModule\n\n  ],\n  providers: [AuthenticationService,PostinfoService,QuoteinfoService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".center-screen {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    text-align: center;\\n    min-height: 100vh;\\n    font-size: 120px;\\n    font: bold;\\n  }\\n\\n\\n  body {\\n    background-image: url(\\\"/angulardemo-1.0/assets/BWbg.jpg\\\");\\n    background-color: #cccccc;\\n }\"","module.exports = \"<body>\\n    <div id=\\\"over\\\" class=\\\"center-screen\\\">\\n        <label>Welcome..!</label>\\n      </div>\\n</body>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private authenticateservice: AuthenticationService, private router: Router) {\n\n    if(localStorage.getItem(\"loggeduser\")!=null)\n    this.authenticateservice.getloggedIn().next(true);\n  else\n    this.router.navigateByUrl('/login');\n    \n   }\n\n  ngOnInit() {\n  \n  }\n\n  ngAfterContentChecked() {\n   \n  } \n\n}\n","module.exports = \".card{\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0,0.2);\\n    transition: 0.3s;\\n    width: 500px;\\n    height: 320px;\\n    margin: auto;   \\n    \\n    }\\n    \\n    .container {\\n        padding: 40px 70px;   \\n    }\\n    \\n    body {background-color: coral;}\\n    \\n    #over img {\\n        margin-left: auto;\\n        margin-right: auto;\\n        display: block;\\n    }\\n    \\n    .help-block{\\n        color: red;\\n    }\"","module.exports = \"<!--<div style=\\\"text-align: center\\\">\\n  <h1>Welcome</h1>\\n</div>\\n-->\\n\\n<div style=\\\"padding-top: 110px\\\">\\n\\n</div>\\n\\n<div id=\\\"over\\\">\\n  <img src=\\\"../assets/logo.jpg\\\" width=\\\"100px\\\" />\\n</div>\\n\\n<div class=\\\"card\\\">\\n \\n    <div class=\\\"container\\\">\\n        <form #f=\\\"ngForm\\\" name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && login()\\\" novalidate>\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':f.submitted && !username.valid}\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input type=\\\"text\\\" id=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.username\\\" #username=\\\"ngModel\\\" required\\n        />\\n        <div *ngIf=\\\"f.submitted && !username.valid\\\" class=\\\"help-block\\\">Username required</div>\\n      </div>\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':f.submitted && !password.valid}\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\"\\n          required/>\\n        <div *ngIf=\\\"f.submitted && !password.valid\\\" class=\\\"help-block\\\">Password required</div>\\n      </div>\\n      <div class=\\\"form-group\\\" style=\\\" margin: 0 auto;text-align:center;\\\">\\n        <!-- <input type=\\\"button\\\" class=\\\"btn btn-primary\\\" value=\\\"login\\\" /> -->\\n        <button class=\\\"btn btn-primary\\\">login</button>\\n      </div>\\n      <div *ngIf=\\\"loginerror\\\" class=\\\"help-block\\\">{{loginerrormsg}}</div>\\n    </form>\\n    \\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../model/user';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  model = new User();\n  loginerrormsg: string = '';\n  loginerror: boolean = false;\n\n  constructor(private authenticateservice: AuthenticationService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n\n  login() {\n    console.log(\"user info:\" + JSON.stringify(this.model))\n    this.authenticateservice.login(this.model).subscribe(data => {\n      console.log(data);\n\n      if (data != null && data['msg'] == 'success') {\n        this.authenticateservice.getloggedIn().next(true);\n        this.loginerror=false;\n        this.loginerrormsg='';\n        this.router.navigateByUrl(\"/home\");\n        localStorage.setItem(\"loggeduser\", JSON.stringify(data['response']))\n      }\n      else\n      {\n        this.authenticateservice.getloggedIn().next(false);\n        this.loginerror=true;\n        this.loginerrormsg=data['response']\n        console.log(\"login failed\");\n      }\n      return data;\n\n    },\n    error => {\n        this.authenticateservice.getloggedIn().next(false);\n        console.log(error );\n        this.loginerror=true;\n        this.loginerrormsg=(error['msg'] == undefined?error['statusText']==undefined?'UnKown error Occured':error['statusText']:'UnKown error Occured');\n        return error;\n      }\n    );\n\n  }\n}\n","export class CommonUtils{\n\n static appContextpath:String=\"/angulardemo-1.0/\"\n \n static appUserKey:string=\"mark:m@dm@xFury\"\n\n}","export class Posts {\n  postid:number=0;\n  posttitle:String;\n  posttitle2:String;\n  postdesc:String;\n  postimgurl:String;\n  cuser:number=0;\n  status:number=1;\n  createddate:String;\n  modifieddate:String;\n  muser:number=0;\n  newscategorycode:number;\t\n  fileupload1:String='';\n  fileupload2:String='';\n\n  postinfo:any={};\n\n}\n","export class Quotes{\n      quoteno:Number=0;\n\t  quotedesc:String;\n\t  quotecolor:String;\n\t  quoteimg:String;\n\t  createddate:String;\n\t  cuser:Number=0;\n\t  status:Number=1;\n      modifieddate:String;\n\tmuser:Number=0;\n\tfileupload1:String='';\n}","export class User {\n  username:String;\n  password:String;\n  usercode:number;\n  rolecode:number;\n  status:number;\n}\n","module.exports = \".panel-table .panel-body{\\n    padding:0;\\n  }\\n  \\n  .panel-table .panel-body .table-bordered{\\n    border-style: none;\\n    margin:0;\\n  }\\n  \\n  .panel-table .panel-body .table-bordered > thead > tr > th:first-of-type {\\n      text-align:center;\\n      width: 100px;\\n  }\\n  \\n  .panel-table .panel-body .table-bordered > thead > tr > th:last-of-type,\\n  .panel-table .panel-body .table-bordered > tbody > tr > td:last-of-type {\\n    border-right: 0px;\\n  }\\n  \\n  .panel-table .panel-body .table-bordered > thead > tr > th:first-of-type,\\n  .panel-table .panel-body .table-bordered > tbody > tr > td:first-of-type {\\n    border-left: 0px;\\n  }\\n  \\n  .panel-table .panel-body .table-bordered > tbody > tr:first-of-type > td{\\n    border-bottom: 0px;\\n  }\\n  \\n  .panel-table .panel-body .table-bordered > thead > tr:first-of-type > th{\\n    border-top: 0px;\\n  }\\n  \\n  .panel-table .panel-footer .pagination{\\n    margin:0; \\n  }\\n  \\n  /*\\n  used to vertically center elements, may need modification if you're not using default sizes.\\n  */\\n  \\n  .panel-table .panel-footer .col{\\n   line-height: 34px;\\n   height: 34px;\\n  }\\n  \\n  .panel-table .panel-heading .col h3{\\n   line-height: 30px;\\n   height: 30px;\\n  }\\n  \\n  .panel-table .panel-body .table-bordered > tbody > tr > td{\\n    line-height: 34px;\\n  }\\n  \\n  /* The Modal (background) */\\n  \\n  .modal {\\n  display: none; /* Hidden by default */\\n  position: fixed; /* Stay in place */\\n  z-index: 1; /* Sit on top */\\n  padding-top: 100px; /* Location of the box */\\n  left: 0;\\n  top: 0;\\n  width: 100%; /* Full width */\\n  height: 100%; /* Full height */\\n  overflow: auto; /* Enable scroll if needed */\\n  background-color: rgb(0,0,0); /* Fallback color */\\n  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\\n}\\n  \\n  /* The Modal (background) */\\n  \\n  .modalalert {\\n    display: none; /* Hidden by default */\\n    position: fixed; /* Stay in place */\\n    z-index: 1; /* Sit on top */\\n    padding-top: 100px; /* Location of the box */\\n    left: 0;\\n    top: 0;\\n    width: 100%; /* Full width */\\n    height: 100%; /* Full height */\\n    overflow: auto; /* Enable scroll if needed */\\n    background-color: rgb(0,0,0); /* Fallback color */\\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\\n  }\\n  \\n  /* Modal Content */\\n  \\n  .modal-content {\\n  position: relative;\\n  background-color: #fefefe;\\n  margin: auto;\\n  padding: 0;\\n  border: 1px solid #888;\\n  width: 80%;\\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\\n  -webkit-animation-name: animatetop;\\n  -webkit-animation-duration: 0.4s;\\n  animation-name: animatetop;\\n  animation-duration: 0.4s\\n}\\n  \\n  .modal-alertcontent {\\n  position: relative;\\n  background-color: #fefefe;\\n  margin: auto;\\n  padding: 0;\\n  border: 1px solid #888;\\n  width: 50%;\\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\\n  -webkit-animation-name: animatetop;\\n  -webkit-animation-duration: 0.4s;\\n  animation-name: animatetop;\\n  animation-duration: 0.4s\\n}\\n  \\n  /* Add Animation */\\n  \\n  @-webkit-keyframes animatetop {\\n  from {top:-300px; opacity:0} \\n  to {top:0; opacity:1}\\n}\\n  \\n  @keyframes animatetop {\\n  from {top:-300px; opacity:0}\\n  to {top:0; opacity:1}\\n}\\n  \\n  /* The Close Button */\\n  \\n  .close {\\n  color: white;\\n  float: right;\\n  font-size: 28px;\\n  font-weight: bold;\\n}\\n  \\n  .close:hover,\\n.close:focus {\\n  color: #000;\\n  text-decoration: none;\\n  cursor: pointer;\\n}\\n  \\n  .modal-header {\\n  padding: 2px 16px;\\n  background-color:#ca8e0bb9;\\n  color: white;\\n}\\n  \\n  .modal-body {padding: 2px 16px;}\\n  \\n  .modal-footer {\\n  padding: 2px 16px;\\n  background-color: #ca8e0bb9;\\n  color: rgb(255, 255, 255);\\n}\\n  \\n  .ellipsis {\\n    max-width: 500px;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n    white-space: nowrap;\\n}\\n  \\n  .table tr.active td {\\n  background-color:#123456 !important;\\n  color: white;\\n}\\n  \\n  .centered_buttons {\\n   display: flex;\\n    justify-content: center;\\n}\\n  \\n  .div-button\\n{\\n    margin-left: 10px;\\n}\\n  \\n  .help-block{\\n  color: red;\\n}\"","module.exports = \"\\n  <div>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10 col-md-offset-1\\\">\\n        <div class=\\\"panel panel-default panel-table\\\">\\n          <div class=\\\"panel-heading\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col col-xs-6\\\">\\n                <h3 class=\\\"panel-title\\\">PostManager</h3>\\n              </div>\\n              <div class=\\\"col col-xs-6 text-right\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary btn-create\\\" (click)=\\\"reset()\\\">Reset</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary btn-create\\\" (click)=\\\"searchpop()\\\">Search</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary btn-create\\\" (click)=\\\"add()\\\">Add</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary btn-create\\\" (click)=\\\"edit()\\\">Edit</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary btn-delete\\\" (click)=\\\"deletePost()\\\">Delete</button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"panel-body\\\">\\n              <div>\\n                  <pagination-controls  id=\\\"listing_pagination\\\" maxSize=\\\"5\\\" directionLinks=\\\"true\\\" (pageChange)=\\\"page = $event;selectedRow=-1;\\\"></pagination-controls>\\n              </div>\\n\\n            <table class=\\\"table table-striped table-bordered table-list\\\">\\n              <thead>\\n                <tr>\\n                  <th>PostTitle</th>\\n                  <th>PostDesc</th>\\n                  <th>PostInfo</th>\\n                </tr>\\n              </thead>\\n              <tr *ngFor=\\\"let post of posts | paginate: { id: 'listing_pagination',\\n              itemsPerPage: itemsPerPage,\\n              currentPage: page,\\n              totalItems: totalRec }; let i = index;\\\" (click)=\\\"setClickedRow(i)\\\" [class.active]=\\\"i == selectedRow\\\">\\n                <td>{{post.posttitle}}</td>\\n                <td>{{post.postdesc}}</td>\\n                <td class=\\\"ellipsis\\\">{{post.postinfo.postviewdesc}}</td>\\n              </tr>\\n            </table>\\n           \\n          </div>\\n          <!--           <div class=\\\"panel-footer\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col col-xs-4\\\">Page 1 of 5\\n                </div>\\n                <div class=\\\"col col-xs-8\\\">\\n                  <ul class=\\\"pagination hidden-xs pull-right\\\">\\n                    <li><a href=\\\"#\\\">1</a></li>\\n                    <li><a href=\\\"#\\\">2</a></li>\\n                    <li><a href=\\\"#\\\">3</a></li>\\n                    <li><a href=\\\"#\\\">4</a></li>\\n                    <li><a href=\\\"#\\\">5</a></li>\\n                  </ul>\\n                  <ul class=\\\"pagination visible-xs pull-right\\\">\\n                      <li><a href=\\\"#\\\">«</a></li>\\n                      <li><a href=\\\"#\\\">»</a></li>\\n                  </ul>\\n                </div>\\n              </div>\\n            </div> -->\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div id=\\\"myModal\\\" class=\\\"modal\\\" [style.display]=\\\"popstyle\\\">\\n\\n      <!-- Modal content -->\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <div (click)=\\\"toggle()\\\">\\n            <span class=\\\"close\\\">&times;</span>\\n          </div>\\n          <div>\\n              <Label>Manage Post</Label> \\n          </div>         \\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <div class=\\\"container\\\">\\n            <form #f=\\\"ngForm\\\" name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && submitPostinfo()\\\" novalidate>\\n\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':f.submitted && !fposttitle.valid}\\\">\\n                <label for=\\\"fposttitle\\\">PostTitle</label>\\n                <input type=\\\"text\\\" id=\\\"fposttitle\\\" name=\\\"fposttitle\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.posttitle\\\" #fposttitle=\\\"ngModel\\\"\\n                  required />\\n                <div *ngIf=\\\"f.submitted && !fposttitle.valid\\\" class=\\\"help-block\\\">PostTitle required</div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':f.submitted && !fpostdesc.valid}\\\">\\n                <label for=\\\"fpostdesc\\\">PostDesc</label>\\n                <input type=\\\"text\\\" id=\\\"fpostdesc\\\" name=\\\"fpostdesc\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.postdesc\\\" #fpostdesc=\\\"ngModel\\\"\\n                  required />\\n                <div *ngIf=\\\"f.submitted && !fpostdesc.valid\\\" class=\\\"help-block\\\">PostDesc required</div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':f.submitted && !fncategorycode.valid}\\\">\\n                <label for=\\\"fncategorycode\\\">PostCategory</label>\\n                <select [compareWith]=\\\"byId\\\" id=\\\"fncategorycode\\\" name=\\\"fncategorycode\\\" class=\\\"form-control\\\" ngControl=\\\"fncategoryControl\\\"\\n                [(ngModel)]=\\\"model.newscategorycode\\\" #fncategorycode=\\\"ngModel\\\" required>\\n                  <option *ngFor=\\\"let cat of cats\\\" [ngValue]=\\\"cat.newscategorycode\\\">{{cat.newscategoryname1}}/{{cat.newscategoryname2}}</option>\\n                </select>\\n                <div *ngIf=\\\"f.submitted && !fncategorycode.valid\\\" class=\\\"help-block\\\">Post Category required</div>\\n              </div>\\n\\n\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':f.submitted && !postvwdesc.valid}\\\">\\n                <label for=\\\"postvwdesc\\\">PostInfo</label>\\n                <textarea rows=\\\"10\\\" id=\\\"postvwdesc\\\" name=\\\"postvwdesc\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.postinfo.postviewdesc\\\" #postvwdesc=\\\"ngModel\\\"\\n                  required></textarea>\\n                <div *ngIf=\\\"f.submitted && !postvwdesc.valid\\\" class=\\\"help-block\\\">PostInfo required</div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':f.submitted && !postimgurl.valid}\\\">\\n                <label for=\\\"postimgurl\\\">PostImage</label>\\n                <input type=\\\"text\\\" readonly id=\\\"postimgurl\\\" name=\\\"postimgurl\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.postimgurl\\\"\\n                  #postimgurl=\\\"ngModel\\\" required />\\n                <input type=\\\"file\\\" #fileupload1 name=\\\"uploadfile1\\\" [(ngModel)]=\\\"model.fileupload1\\\" #fileupload1=\\\"ngModel\\\" (change)=\\\"postimgfileChange($event)\\\" class=\\\"form-control\\\"  />\\n                <!--     <button class=\\\"btn btn-success\\\" [disabled]=\\\"uploadfile1 == undefined\\\"\\n\\t                  (click)=\\\"uploadfilepostimg()\\\">Upload</button>\\n           -->\\n                <div *ngIf=\\\"f.submitted && !postimgurl.valid\\\" class=\\\"help-block\\\">PostImage required</div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':f.submitted && !postimgurls.valid}\\\">\\n                  <label for=\\\"postimgurls\\\">PostViewImage</label>\\n                  <input type=\\\"text\\\" readonly id=\\\"postimgurls\\\" name=\\\"postimgurls\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.postinfo.postimgurls\\\"\\n                    #postimgurls=\\\"ngModel\\\" required />\\n                  <input type=\\\"file\\\" #fileupload2 name=\\\"uploadfile2\\\" [(ngModel)]=\\\"model.fileupload2\\\" #fileupload2=\\\"ngModel\\\" (change)=\\\"postimgfileChange($event)\\\" class=\\\"form-control\\\"  />\\n                  <!--     <button class=\\\"btn btn-success\\\" [disabled]=\\\"uploadfile1 == undefined\\\"\\n                      (click)=\\\"uploadfilepostimg()\\\">Upload</button>\\n             -->\\n                  <div *ngIf=\\\"f.submitted && !postimgurl.valid\\\" class=\\\"help-block\\\">PostViewImage required</div>\\n                </div>\\n\\n              <div class=\\\"form-group\\\" style=\\\" margin: 0 auto;text-align:center;\\\">\\n                <button class=\\\"btn btn-primary\\\">Submit</button>\\n              </div>\\n              <div *ngIf=\\\"submiterror\\\" class=\\\"help-block\\\"> </div>\\n\\n            </form>\\n          </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <!--   <h3> </h3> -->\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div id=\\\"searchmodal\\\" class=\\\"modal\\\" [style.display]=\\\"searchstyle\\\">\\n\\n        <!-- Modal content -->\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <div (click)=\\\"togglesearch()\\\">\\n              <span class=\\\"close\\\">&times;</span>\\n            </div>\\n              <Label>Search Post</Label> \\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            <div class=\\\"container\\\">\\n              <form #searchform=\\\"ngForm\\\" name=\\\"form\\\" (ngSubmit)=\\\"searchform.form.valid \\\" novalidate>\\n  \\n                <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':searchform.submitted && !posttitle.valid}\\\">\\n                  <label for=\\\"posttitle\\\">PostTitle</label>\\n                  <input type=\\\"text\\\" id=\\\"posttitle\\\" name=\\\"posttitle\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchmodel.posttitle\\\" #posttitle=\\\"ngModel\\\"\\n                     />\\n                  <div *ngIf=\\\"f.submitted && !posttitle.valid\\\" class=\\\"help-block\\\">PostTitle required</div>\\n                </div>\\n  \\n                <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':searchform.submitted && !postdesc.valid}\\\">\\n                  <label for=\\\"postdesc\\\">PostDesc</label>\\n                  <input type=\\\"text\\\" id=\\\"posttitle2\\\" name=\\\"postdesc\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchmodel.postdesc\\\" #postdesc=\\\"ngModel\\\"\\n                     />\\n                  <div *ngIf=\\\"f.submitted && !postdesc.valid\\\" class=\\\"help-block\\\">PostDesc required</div>\\n                </div>\\n  \\n  \\n                <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':searchform.submitted && !postdesc.valid}\\\">\\n                  <label for=\\\"postdesc\\\">PostInfo</label>\\n                  <input type=\\\"text\\\" id=\\\"postdesc\\\" name=\\\"postdesc\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchmodel.postinfo.postviewdesc\\\" #postdesc=\\\"ngModel\\\"/>\\n                  <div *ngIf=\\\"f.submitted && !postdesc.valid\\\" class=\\\"help-block\\\">PostDesc required</div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':searchform.submitted && !createddate.valid}\\\">\\n                    <label for=\\\"createddate\\\">Post FromDate</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"createddate\\\" name=\\\"createddate\\\" (change)=\\\"datehandle($event)\\\" [(ngModel)]=\\\"searchmodel.createddate\\\" #createddate=\\\"ngModel\\\"/>\\n                    <div *ngIf=\\\"f.submitted && !createddate.valid\\\" class=\\\"help-block\\\">Post Date required</div>\\n                  </div>\\n\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':searchform.submitted && !modifieddate.valid}\\\">\\n                    <label for=\\\"modifieddate\\\">Post ToDate</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"modifieddate\\\" name=\\\"modifieddate\\\" (change)=\\\"datehandle($event)\\\" [(ngModel)]=\\\"searchmodel.modifieddate\\\" #modifieddate=\\\"ngModel\\\"/>\\n                    <div *ngIf=\\\"f.submitted && !modifieddate.valid\\\" class=\\\"help-block\\\">Post ToDate required</div>\\n                  </div>\\n          \\n                <div class=\\\"form-group\\\" style=\\\" margin: 0 auto;text-align:center;\\\">\\n                  <button class=\\\"btn btn-primary\\\" (click)=\\\"search()\\\">Search</button>\\n                  <button class=\\\"btn  btn-primary\\\" (click)=\\\"searchform.form.reset()\\\">Reset</button>\\n                </div>\\n              \\n                <div *ngIf=\\\"submiterror\\\" class=\\\"help-block\\\"> </div>\\n  \\n              </form>\\n            </div>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <!--   <h3> </h3> -->\\n          </div>\\n        </div>\\n  \\n      </div>\\n\\n    <div id=\\\"alertModal\\\" class=\\\"modalalert\\\" [style.display]=\\\"popalertstyle\\\">\\n      <div class=\\\"modal-alertcontent\\\">\\n        <div class=\\\"modal-header\\\">\\n          <div (click)=\\\"togglealert()\\\">\\n            <span class=\\\"close\\\">&times;</span>           \\n          </div>\\n          <Label>Decision</Label> \\n        </div>\\n\\n        <div class=\\\"modal-body\\\">\\n          <div class=\\\"container\\\">\\n            <div style=\\\"text-align : center;\\\">\\n              <label>Are you sure you want to delete the item..?</label>\\n            </div>\\n            <div class=\\\"centered_buttons\\\">\\n              <button class=\\\"btn btn-primary div-button\\\" (click)=\\\"deletePostdecision()\\\">Ok</button>\\n              <span width=\\\"10%\\\"> </span>\\n              <button class=\\\"btn btn-primary div-button\\\" (click)=\\\"togglealert()\\\">Cancel</button>\\n            </div>\\n\\n          </div>\\n        </div>\\n\\n      </div>\\n\\n\\n    </div>\\n\\n\"","import { Component, OnInit,ViewChild  } from '@angular/core';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { Router } from '@angular/router';\nimport { PostinfoService } from '../service/postinfo.service';\nimport { Posts } from '../model/posts';\nimport {NgForm} from '@angular/forms';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  posts: Posts[] = null;\n  popstyle: String = 'none';\n  model:Posts=new Posts();\n  cats:any[]=JSON.parse(\"[{\\\"newscategorycode\\\":\\\"1\\\",\\\"newscategoryname\\\":\\\"History\\\"},{\\\"newscategorycode\\\":\\\"2\\\",\\\"newscategoryname\\\":\\\"Cenima\\\"}]\");\n  filename1:string; \n  uploadfile1:File;\n  selectedRow : Number = -1;\n  setClickedRow : Function;\n  popalertstyle: String = 'none';\n  totalRec:number=0;\n  searchstyle: String = 'none';\n  searchmodel:Posts=new Posts();\n  page:number=1;\n  itemsPerPage:number=5;\n  \n  \n  @ViewChild('f') \n  mytemplateForm : NgForm; \n  @ViewChild('searchform') \n  searchform : NgForm; \n\n  constructor(private authenticateservice: AuthenticationService, private postservice: PostinfoService, private router: Router) {\n    if (localStorage.getItem(\"loggeduser\") != null)\n      this.authenticateservice.getloggedIn().next(true);\n    else\n      this.router.navigateByUrl('/login');\n\n        this.setClickedRow = function(index){\n            this.selectedRow = index;\n             let i:any=(this.selectedRow+this.itemsPerPage * (this.page-1));\n            this.model=this.posts[i]\n        }\n\n\n        this.postservice.getPostCat().subscribe(data => {\n          if(data['response']!=null)\n           {\n              if(data['msg'] == 'success')\n             {\n           this.cats = data['response'];\n             }\n           }\n           \n         });\n        \n  }\n\n  ngOnInit() {\n    this.getpostinfo();\n    var self = this;\n     $(document).ready(function(){\n      $(\"#createddate\").datepicker({\n        dateFormat: 'yy-mm-dd',\n        onSelect: function(date) {\n          self.searchmodel.createddate=date;\n        }});\n\n        $(\"#modifieddate\").datepicker({\n          dateFormat: 'yy-mm-dd',\n          onSelect: function(date) {\n            self.searchmodel.modifieddate=date;\n          }});\n    }); \n  }\n\n  datehandle(event){\n    console.log(\"Date changed: \");\n  }\n\n  reset()\n  {\n    this.page=1;\n    this.getpostinfo();\n  }\n\n  byId(item1: any,item2:Number)  {\n    return Number(item1) === item2;\n  }\n\n  searchpop(){\n    this.searchmodel=new Posts();\n    this.togglesearch();\n  }\n\n  search(){\n    this.postservice.searchPost(this.searchmodel).subscribe(data => {\n      if(data['response']!=null)\n       {\n          if(data['msg'] == 'success')\n         {\n          this.posts = data['response'];\n          this.totalRec =this.posts.length;\n          this.togglesearch();\n          this.searchmodel=new Posts();\n         }\n         else{\n           alert(data['response']);\n         }\n       }\n       \n     });\n  }\n\n /*  onSelect(catcode:Number)\n  {\n  for(let i=0;i<this.cats.length-1;i++)\n  {\n  if(catcode == this.cats[i].newscategorycode )\n  {\n    this.selectedcat=this.cats[i];\n  }\n  }\n  }\n */\n  getpostinfo()\n  {\n   this.postservice.getPost().subscribe(data => {\n     if(data['response']!=null)\n      {\n         if(data['msg'] == 'success')\n        {\n      this.posts = data['response'];\n      this.totalRec =this.posts.length;\n        }\n      }\n      \n    });\n  }\n\n  add()\n  {\n    this.selectedRow =-1;\n    //this.mytemplateForm.resetForm();\n    this.model=new Posts();\n    this.toggle();\n  }\n  edit()\n  {\n    if(this.selectedRow != -1)\n    {\n    //  let i:any=this.selectedRow;\n   //  this.model=this.posts[i]\n      this.toggle();\n    }\n  }\n\n  toggle() {\n    if (this.popstyle == 'none') {\n      this.popstyle = 'block';    \n    }\n    else if (this.popstyle == 'block') {\n      this.popstyle = 'none';   \n    }\n  }\n\n  togglesearch() {\n    if (this.searchstyle == 'none') {\n      this.searchstyle = 'block';    \n    }\n    else if (this.searchstyle == 'block') {\n      this.searchstyle = 'none';   \n    }\n  }\n\n \n\n  togglealert()\n  {\n    if (this.popalertstyle == 'none') {\n      this.popalertstyle = 'block';    \n    }\n    else if (this.popalertstyle == 'block') {\n      this.popalertstyle = 'none';   \n    }\n  }\n\n  postimgfileChange(event: EventTarget){\n  const eventObj: MSInputMethodContext = <MSInputMethodContext>event;\n  const target: HTMLInputElement = <HTMLInputElement>eventObj.target;\n  const files: FileList = target.files;\n   const formData: FormData = new FormData();\n   for (let i = 0; i < files.length; i++) {\n    formData.append('file', files[i]);\n    if(target.name == 'uploadfile1')\n     this.model.postimgurl = files[i].name\n     else  if(target.name == 'uploadfile2')\n     this.model.postinfo.postimgurls = files[i].name\n  }   \n   if(files.length>0)\n    {\n      this.uploadF1(formData)\n    }\n    else\n    {\n      if(target.name == 'uploadfile1')\n      this.model.postimgurl =null;\n      else  if(target.name == 'uploadfile2')\n      this.model.postinfo.postimgurls = null;   \n    }\n      \n}\n\nuploadF1(formData:any)\n  {\n    this.postservice.uploadF1(formData).subscribe(data => {\n      if(data['response']!=null)\n      {\n        if(data['response']== 'success')\n        alert('file upload success')\n        else\n        alert('error has occurred..!')\n      } \n    }\n    );\n  }\n\n  \n  uploadfilepostimg()\n  {\n    this.postservice.uploadFile(this.uploadfile1).subscribe(data => {\n      if(data['response']!=null)\n      {\n        if(data['msg'] == 'success')\n        alert('file upload success')\n        else\n        alert('error has occurred..!')\n      } \n    }\n     );\n  }\n\n  submitPostinfo()\n  {\n\n    if(this.model.postid == 0)\n    {\n      this.postservice.addPost(this.model).subscribe(data => {\n      if(data['response']!=null)\n      {\n        if(data['msg'] == 'success')\n        {\n            this.toggle();\n            this.mytemplateForm.resetForm();\n            this.getpostinfo();\n            this.selectedRow = -1;\n            this.model=new Posts();\n        }\n       \n        else\n        alert('error has occurred..!')\n      } \n    });\n    }\n    else  if(this.model.postid != 0) {\n     this.postservice.updatePost(this.model).subscribe(data => {\n      if(data['response']!=null)\n      {\n        if(data['msg'] == 'success')\n        {\n            this.toggle();\n            this.mytemplateForm.resetForm();\n            this.getpostinfo();\n            this.selectedRow = -1;\n            this.model=new Posts();\n        }\n       \n        else\n        alert('error has occurred..!')\n      } \n    });\n    }    \n  }\n  deletePost()\n  {\n    if(this.selectedRow != -1)\n    {\n     this.togglealert();\n    }\n  }\n\n  deletePostdecision()\n  {\n    if(this.model.postid != 0)\n    {\n          this.postservice.deletePost(this.model).subscribe(data => {\n      if(data['response']!=null)\n      {\n        if(data['msg'] == 'success')\n        {\n           this.getpostinfo();\n           this.togglealert();\n          alert('post deleted successfully..!');\n        }\n       \n        else\n        alert('error has occurred..!')\n      } \n    });\n\n    }\n  }\n\n}\n","module.exports = \".panel-table .panel-body{\\n    padding:0;\\n  }\\n  \\n  .panel-table .panel-body .table-bordered{\\n    border-style: none;\\n    margin:0;\\n  }\\n  \\n  .panel-table .panel-body .table-bordered > thead > tr > th:first-of-type {\\n      text-align:center;\\n      width: 100px;\\n  }\\n  \\n  .panel-table .panel-body .table-bordered > thead > tr > th:last-of-type,\\n  .panel-table .panel-body .table-bordered > tbody > tr > td:last-of-type {\\n    border-right: 0px;\\n  }\\n  \\n  .panel-table .panel-body .table-bordered > thead > tr > th:first-of-type,\\n  .panel-table .panel-body .table-bordered > tbody > tr > td:first-of-type {\\n    border-left: 0px;\\n  }\\n  \\n  .panel-table .panel-body .table-bordered > tbody > tr:first-of-type > td{\\n    border-bottom: 0px;\\n  }\\n  \\n  .panel-table .panel-body .table-bordered > thead > tr:first-of-type > th{\\n    border-top: 0px;\\n  }\\n  \\n  .panel-table .panel-footer .pagination{\\n    margin:0; \\n  }\\n  \\n  /*\\n  used to vertically center elements, may need modification if you're not using default sizes.\\n  */\\n  \\n  .panel-table .panel-footer .col{\\n   line-height: 34px;\\n   height: 34px;\\n  }\\n  \\n  .panel-table .panel-heading .col h3{\\n   line-height: 30px;\\n   height: 30px;\\n  }\\n  \\n  .panel-table .panel-body .table-bordered > tbody > tr > td{\\n    line-height: 34px;\\n  }\\n  \\n  /* The Modal (background) */\\n  \\n  .modalq {\\n  display: none; /* Hidden by default */\\n  position: fixed; /* Stay in place */\\n  z-index: 1; /* Sit on top */\\n  padding-top: 100px; /* Location of the box */\\n  left: 0;\\n  top: 0;\\n  width: 100%; /* Full width */\\n  height: 100%; /* Full height */\\n  overflow: auto; /* Enable scroll if needed */\\n  background-color: rgb(0,0,0); /* Fallback color */\\n  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\\n}\\n  \\n  /* The Modal (background) */\\n  \\n  .modalalertq {\\n    display: none; /* Hidden by default */\\n    position: fixed; /* Stay in place */\\n    z-index: 1; /* Sit on top */\\n    padding-top: 100px; /* Location of the box */\\n    left: 0;\\n    top: 0;\\n    width: 100%; /* Full width */\\n    height: 100%; /* Full height */\\n    overflow: auto; /* Enable scroll if needed */\\n    background-color: rgb(0,0,0); /* Fallback color */\\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\\n  }\\n  \\n  /* Modal Content */\\n  \\n  .modal-content {\\n  position: relative;\\n  background-color: #fefefe;\\n  margin: auto;\\n  padding: 0;\\n  border: 1px solid #888;\\n  width: 80%;\\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\\n  -webkit-animation-name: animatetop;\\n  -webkit-animation-duration: 0.4s;\\n  animation-name: animatetop;\\n  animation-duration: 0.4s\\n}\\n  \\n  .modal-alertcontent {\\n  position: relative;\\n  background-color: #fefefe;\\n  margin: auto;\\n  padding: 0;\\n  border: 1px solid #888;\\n  width: 50%;\\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\\n  -webkit-animation-name: animatetop;\\n  -webkit-animation-duration: 0.4s;\\n  animation-name: animatetop;\\n  animation-duration: 0.4s\\n}\\n  \\n  /* Add Animation */\\n  \\n  @-webkit-keyframes animatetop {\\n  from {top:-300px; opacity:0} \\n  to {top:0; opacity:1}\\n}\\n  \\n  @keyframes animatetop {\\n  from {top:-300px; opacity:0}\\n  to {top:0; opacity:1}\\n}\\n  \\n  /* The Close Button */\\n  \\n  .close {\\n  color: white;\\n  float: right;\\n  font-size: 28px;\\n  font-weight: bold;\\n}\\n  \\n  .close:hover,\\n.close:focus {\\n  color: #000;\\n  text-decoration: none;\\n  cursor: pointer;\\n}\\n  \\n  .modal-header {\\n  padding: 2px 16px;\\n  background-color:#ca8e0bb9;\\n  color: white;\\n}\\n  \\n  .modal-body {padding: 2px 16px;}\\n  \\n  .modal-footer {\\n  padding: 2px 16px;\\n  background-color: #ca8e0bb9;\\n  color: rgb(255, 255, 255);\\n}\\n  \\n  .ellipsis {\\n    max-width: 500px;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n    white-space: nowrap;\\n}\\n  \\n  .table tr.active td {\\n  background-color:#123456 !important;\\n  color: white;\\n}\\n  \\n  .centered_buttons {\\n   display: flex;\\n    justify-content: center;\\n}\\n  \\n  .div-button\\n{\\n    margin-left: 10px;\\n}\\n  \\n  .help-block{\\n  color: red;\\n}\"","module.exports = \"<div>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10 col-md-offset-1\\\">\\n        <div class=\\\"panel panel-default panel-table\\\">\\n          <div class=\\\"panel-heading\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col col-xs-6\\\">\\n                <h3 class=\\\"panel-title\\\">QuoteManager</h3>\\n              </div>\\n              <div class=\\\"col col-xs-6 text-right\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary btn-create\\\" (click)=\\\"reset()\\\">Reset</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary btn-create\\\" (click)=\\\"searchpop()\\\">Search</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary btn-create\\\" (click)=\\\"add()\\\">Add</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary btn-create\\\" (click)=\\\"edit()\\\">Edit</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary btn-delete\\\" (click)=\\\"deleteQuote()\\\">Delete</button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"panel-body\\\">\\n              <div>\\n                  <pagination-controls  id=\\\"listing_pagination\\\" maxSize=\\\"5\\\" directionLinks=\\\"true\\\" (pageChange)=\\\"page = $event;selectedRow=-1;\\\"></pagination-controls>\\n              </div>\\n\\n            <table class=\\\"table table-striped table-bordered table-list\\\">\\n              <thead>\\n                <tr>\\n                  <th>QuoteColor</th>\\n                  <th>QuoteImg</th>\\n                  <th>QuoteDesc</th>\\n                </tr>\\n              </thead>\\n              <tr *ngFor=\\\"let quote of quotes | paginate: { id: 'listing_pagination',\\n              itemsPerPage: itemsPerPage,\\n              currentPage: page,\\n              totalItems: totalRec }; let i = index;\\\" (click)=\\\"setClickedRow(i)\\\" [class.active]=\\\"i == selectedRow\\\">\\n                <td>{{getcolorname(quote.quotecolor)}}</td>\\n                <td>{{quote.quoteimg}}</td>\\n                <td class=\\\"ellipsis\\\">{{quote.quotedesc}}</td>\\n              </tr>\\n            </table>          \\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n\\n    <div id=\\\"myModal\\\" class=\\\"modalq\\\" [style.display]=\\\"popstyle\\\">\\n\\n      <!-- Modal content -->\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <div (click)=\\\"toggle()\\\">\\n            <span class=\\\"close\\\">&times;</span>\\n          </div>\\n          <div>\\n              <Label>Manage Quote</Label> \\n          </div>         \\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <div class=\\\"container\\\">\\n            <form #f=\\\"ngForm\\\" name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && submitQuoteinfo()\\\" novalidate>\\n\\n            \\n\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':f.submitted && !quotecolor.valid}\\\">\\n                <label for=\\\"quotecolor\\\">QuoteColor</label>\\n                <select [compareWith]=\\\"byId\\\" id=\\\"quotecolor\\\" name=\\\"quotecolor\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.quotecolor\\\"\\n                  #quotecolor=\\\"ngModel\\\" required>\\n                  <option *ngFor=\\\"let cat of cats\\\" [ngValue]=\\\"cat.quotecolorcd\\\">{{cat.quotecolor}}</option>\\n                </select>\\n                <div *ngIf=\\\"f.submitted && !quotecolor.valid\\\" class=\\\"help-block\\\">QuoteColor required</div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':f.submitted && !quotevdesc.valid}\\\">\\n                <label for=\\\"quotevdesc\\\">QuoteDesc</label>\\n                  <textarea rows=\\\"10\\\" id=\\\"quotevdesc\\\" name=\\\"quotevdesc\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.quotedesc\\\" \\n                  #quotevdesc=\\\"ngModel\\\" required>\\n                </textarea>\\n                <div *ngIf=\\\"f.submitted && !quotevdesc.valid\\\" class=\\\"help-block\\\">QuoteDesc required</div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':f.submitted && !quoteimg.valid}\\\">\\n                <label for=\\\"quoteimg\\\">QuoteImage</label>\\n                <input type=\\\"text\\\" readonly id=\\\"quoteimg\\\" name=\\\"quoteimg\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.quoteimg\\\"\\n                  #quoteimg=\\\"ngModel\\\" required />\\n                <input type=\\\"file\\\" #fileupload1 name=\\\"uploadfile1\\\"  (change)=\\\"quoteimgfileChange($event)\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"model.fileupload1\\\" #fileupload1=\\\"ngModel\\\" />\\n                     <div *ngIf=\\\"f.submitted && !quoteimg.valid\\\" class=\\\"help-block\\\">QuoteImage required</div>\\n              </div>\\n\\n\\n              <div class=\\\"form-group\\\" style=\\\" margin: 0 auto;text-align:center;\\\">\\n                <button class=\\\"btn btn-primary\\\">Submit</button>\\n              </div>\\n              <div *ngIf=\\\"submiterror\\\" class=\\\"help-block\\\"> </div>\\n\\n            </form>\\n          </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <!--   <h3> </h3> -->\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div id=\\\"searchmodal\\\" class=\\\"modalq\\\" [style.display]=\\\"searchstyle\\\">\\n\\n        <!-- Modal content -->\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <div (click)=\\\"togglesearch()\\\">\\n              <span class=\\\"close\\\">&times;</span>\\n            </div>\\n              <Label>Search Quote</Label> \\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            <div class=\\\"container\\\">\\n              <form #searchform=\\\"ngForm\\\" name=\\\"form\\\" (ngSubmit)=\\\"searchform.form.valid\\\" novalidate>\\n                <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':f.submitted && !quotedesc.valid}\\\">\\n                  <label for=\\\"quotedesc\\\">QuoteDesc</label>\\n                  <input type=\\\"text\\\"   id=\\\"quotedesc\\\" name=\\\"quotedesc\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchmodel.quotedesc\\\" #quotedesc=\\\"ngModel\\\" />\\n                  <div *ngIf=\\\"f.submitted && !quotedesc.valid\\\" class=\\\"help-block\\\">QuoteDesc required</div>\\n                </div>\\n  \\n     <!--            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':f.submitted && !quotecolor.valid}\\\">\\n                  <label for=\\\"quotecolor\\\">QuoteColor</label>\\n                  <select [compareWith]=\\\"byId\\\" id=\\\"quotecolor\\\" name=\\\"quotecolor\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.quotecolor\\\"\\n                    #quotecolor=\\\"ngModel\\\" >\\n                    <option *ngFor=\\\"let cat of cats\\\" [ngValue]=\\\"cat.quotecolor\\\">{{cat.quotecolor}}</option>\\n                  </select>\\n                  <div *ngIf=\\\"f.submitted && !quotecolor.valid\\\" class=\\\"help-block\\\">QuoteColor required</div>\\n                </div> -->\\n\\n                <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':searchform.submitted && !createddate.valid}\\\">\\n                  <label for=\\\"createddate\\\">Quote FromDate</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"createddate\\\" name=\\\"createddate\\\" (change)=\\\"datehandle($event)\\\" [(ngModel)]=\\\"searchmodel.createddate\\\" #createddate=\\\"ngModel\\\"/>\\n                  <div *ngIf=\\\"f.submitted && !createddate.valid\\\" class=\\\"help-block\\\">Quote FromDate required</div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':searchform.submitted && !modifieddate.valid}\\\">\\n                  <label for=\\\"modifieddate\\\">Quote ToDate</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"modifieddate\\\" name=\\\"modifieddate\\\" (change)=\\\"datehandle($event)\\\" [(ngModel)]=\\\"searchmodel.modifieddate\\\" #modifieddate=\\\"ngModel\\\"/>\\n                  <div *ngIf=\\\"f.submitted && !modifieddate.valid\\\" class=\\\"help-block\\\">Quote ToDate required</div>\\n                </div>\\n  \\n          \\n                <div class=\\\"form-group\\\" style=\\\" margin: 0 auto;text-align:center;\\\">\\n                  <button class=\\\"btn btn-primary\\\"  (click)=\\\"search()\\\">Search</button>\\n                  <button class=\\\"btn btn-primary\\\" (click)=\\\"searchform.form.reset()\\\">Reset</button>\\n                </div>\\n\\n                <div *ngIf=\\\"submiterror\\\" class=\\\"help-block\\\"> </div>\\n  \\n              </form>\\n            </div>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <!--   <h3> </h3> -->\\n          </div>\\n        </div>\\n  \\n      </div>\\n\\n\\n    <div id=\\\"alertModal\\\" class=\\\"modalalertq\\\" [style.display]=\\\"popalertstyle\\\">\\n      <div class=\\\"modal-alertcontent\\\">\\n        <div class=\\\"modal-header\\\">\\n          <div (click)=\\\"togglealert()\\\">\\n            <span class=\\\"close\\\">&times;</span>           \\n          </div>\\n          <Label>Decision</Label> \\n        </div>\\n\\n        <div class=\\\"modal-body\\\">\\n          <div class=\\\"container\\\">\\n            <div style=\\\"text-align : center;\\\">\\n              <label>Are you sure you want to delete the item..?</label>\\n            </div>\\n            <div class=\\\"centered_buttons\\\">\\n              <button class=\\\"btn btn-primary div-button\\\" (click)=\\\"deleteQuotedecision()\\\">Ok</button>\\n              <span width=\\\"10%\\\"> </span>\\n              <button class=\\\"btn btn-primary div-button\\\" (click)=\\\"togglealert()\\\">Cancel</button>\\n            </div>\\n\\n          </div>\\n        </div>\\n\\n      </div>\\n\\n\\n    </div>\"","import { Quotes } from '../model/quotes';\nimport { Component, OnInit,ViewChild  } from '@angular/core';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { QuoteinfoService } from \"../service/quoteinfo.service\";\nimport { Router } from '@angular/router';\nimport {NgForm} from '@angular/forms';\n\ndeclare var $: any;\n\n\n\n@Component({\n  selector: 'app-quote',\n  templateUrl: './quote.component.html',\n  styleUrls: ['./quote.component.css']\n})\nexport class QuoteComponent implements OnInit {\n  quotes: Quotes[] = null;\n  popstyle: String = 'none';\n  model:Quotes=new Quotes();\n  cats:any[]=JSON.parse(\"[{\\\"quotecolorcd\\\":\\\"255_0_0\\\",\\\"quotecolor\\\":\\\"RED\\\"},{\\\"quotecolorcd\\\":\\\"0_128_0\\\",\\\"quotecolor\\\":\\\"GREEN\\\"},{\\\"quotecolorcd\\\":\\\"0_0_0\\\",\\\"quotecolor\\\":\\\"BLACK\\\"},{\\\"quotecolorcd\\\":\\\"255_255_255\\\",\\\"quotecolor\\\":\\\"WHITE\\\"}]\");\n  filename1:string; \n  uploadfile1:File;\n  selectedRow : Number = -1;\n  setClickedRow : Function;\n  popalertstyle: String = 'none';\n  totalRec:number=0;\n  searchstyle: String = 'none';\n  searchmodel:Quotes=new Quotes();\n  page:number=1;\n  itemsPerPage:number=5;\n  \n  \n  @ViewChild('f') \n  mytemplateForm : NgForm; \n  @ViewChild('searchform') \n  searchform : NgForm; \n\n  constructor(private authenticateservice: AuthenticationService, private quoteService: QuoteinfoService, private router: Router) {\n    if (localStorage.getItem(\"loggeduser\") != null)\n      this.authenticateservice.getloggedIn().next(true);\n    else\n      this.router.navigateByUrl('/login');\n\n        this.setClickedRow = function(index){\n            this.selectedRow = index;\n             let i:any=(this.selectedRow+this.itemsPerPage * (this.page-1));\n            this.model=this.quotes[i]\n        }\n\n\n        this.quoteService.getQuoteCat().subscribe(data => {\n          if(data['response']!=null)\n           {\n              if(data['msg'] == 'success')\n             {\n           this.cats = data['response'];\n             }\n           }\n           \n         });\n        \n  }\n\n  getcolorname(code:String)\n  {\n    let color='';\n    this.cats.forEach(element => {      \n      if(element.quotecolorcd ==code )\n      {\n        color= element.quotecolor;\n      }    \n    });\n    return (color==''?'BLACK':color);\n  }\n\n  ngOnInit() {\n    this.getQuoteinfo();\n    var self = this;\n     $(document).ready(function(){\n      $(\"#createddate\").datepicker({\n        dateFormat: 'yy-mm-dd',\n        onSelect: function(date) {\n          self.searchmodel.createddate=date;\n        }});\n\n        $(\"#modifieddate\").datepicker({\n          dateFormat: 'yy-mm-dd',\n          onSelect: function(date) {\n            self.searchmodel.modifieddate=date;\n          }});\n    }); \n  }\n\n  datehandle(event){\n    console.log(\"Date changed: \");\n  }\n\n  reset()\n  {\n    this.page=1;\n    this.getQuoteinfo();\n  }\n\n  byId(item1: any,item2:any)  {\n    return item1 === item2;\n  }\n\n  searchpop(){\n    this.searchmodel=new Quotes();\n    this.togglesearch();\n  }\n\n  search(){\n    this.quoteService.searchQuote(this.searchmodel).subscribe(data => {\n      if(data['response']!=null)\n       {\n          if(data['msg'] == 'success')\n         {\n          this.quotes = data['response'];\n          this.totalRec =this.quotes.length;\n          this.togglesearch();\n          this.searchmodel=new Quotes();\n         }\n         else{\n           alert(data['response']);\n         }\n       }\n       \n     });\n  }\n\n /*  onSelect(catcode:Number)\n  {\n  for(let i=0;i<this.cats.length-1;i++)\n  {\n  if(catcode == this.cats[i].quotecolorcd )\n  {\n    this.selectedcat=this.cats[i];\n  }\n  }\n  }\n */\ngetQuoteinfo()\n  {\n   this.quoteService.getQuote().subscribe(data => {\n     if(data['response']!=null)\n      {\n         if(data['msg'] == 'success')\n        {\n      this.quotes = data['response'];\n      this.totalRec =this.quotes.length;\n        }\n      }\n      \n    });\n  }\n\n  add()\n  {\n    this.selectedRow =-1;\n    //this.mytemplateForm.resetForm();\n    this.model=new Quotes();\n    this.mytemplateForm.resetForm();\n    this.toggle();\n  }\n  edit()\n  {\n    if(this.selectedRow != -1)\n    {\n    //  let i:any=this.selectedRow;\n   //  this.model=this.Quotes[i]\n      this.toggle();\n    }\n  }\n\n  toggle() {\n    if (this.popstyle == 'none') {\n      this.popstyle = 'block';    \n    }\n    else if (this.popstyle == 'block') {\n      this.popstyle = 'none';   \n    }\n  }\n\n  togglesearch() {\n    if (this.searchstyle == 'none') {\n      this.searchstyle = 'block';    \n    }\n    else if (this.searchstyle == 'block') {\n      this.searchstyle = 'none';   \n    }\n  }\n\n \n\n  togglealert()\n  {\n    if (this.popalertstyle == 'none') {\n      this.popalertstyle = 'block';    \n    }\n    else if (this.popalertstyle == 'block') {\n      this.popalertstyle = 'none';   \n    }\n  }\n\n  quoteimgfileChange(event: EventTarget){\n  const eventObj: MSInputMethodContext = <MSInputMethodContext>event;\n  const target: HTMLInputElement = <HTMLInputElement>eventObj.target;\n  const files: FileList = target.files;\n   const formData: FormData = new FormData();\n   for (let i = 0; i < files.length; i++) {\n    formData.append('file', files[i]);\n    if(target.name == 'uploadfile1')\n     this.model.quoteimg = files[i].name;\n  }   \n   if(files.length>0)\n    {\n      this.uploadF1(formData)\n    }\n    else\n    {\n      if(target.name == 'uploadfile1')\n      this.model.quoteimg =null;\n    }\n      \n}\n\nuploadF1(formData:any)\n  {\n    this.quoteService.uploadF1(formData).subscribe(data => {\n      if(data['response']!=null)\n      {\n        if(data['response']== 'success')\n        alert('file upload success')\n        else\n        alert('error has occurred..!')\n      } \n    }\n    );\n  }\n\n  \n  uploadfilepostimg()\n  {\n    this.quoteService.uploadFile(this.uploadfile1).subscribe(data => {\n      if(data['response']!=null)\n      {\n        if(data['msg'] == 'success')\n        alert('file upload success')\n        else\n        alert('error has occurred..!')\n      } \n    }\n     );\n  }\n\n  submitQuoteinfo()\n  {\n\n    if(this.model.quoteno == 0)\n    {\n      this.quoteService.addQuote(this.model).subscribe(data => {\n      if(data['response']!=null)\n      {\n        if(data['msg'] == 'success')\n        {\n            this.toggle();\n            this.mytemplateForm.resetForm();\n            this.getQuoteinfo();\n            this.selectedRow = -1;\n            this.model=new Quotes();\n        }\n       \n        else\n        alert('error has occurred..!')\n      } \n    });\n    }\n    else  if(this.model.quoteno != 0) {\n     this.quoteService.updateQuote(this.model).subscribe(data => {\n      if(data['response']!=null)\n      {\n        if(data['msg'] == 'success')\n        {\n            this.toggle();\n            this.mytemplateForm.resetForm();\n            this.getQuoteinfo();\n            this.selectedRow = -1;\n            this.model=new Quotes();\n        }\n       \n        else\n        alert('error has occurred..!')\n      } \n    });\n    }    \n  }\n  deleteQuote()\n  {\n    if(this.selectedRow != -1)\n    {\n     this.togglealert();\n    }\n  }\n\n  deleteQuotedecision()\n  {\n    if(this.model.quoteno != 0)\n    {\n          this.quoteService.deleteQuote(this.model).subscribe(data => {\n      if(data['response']!=null)\n      {\n        if(data['msg'] == 'success')\n        {\n           this.getQuoteinfo();\n           this.togglealert();\n           this.selectedRow = -1;\n            this.model=new Quotes();\n          alert('post deleted successfully..!');\n        }\n       \n        else\n        alert('error has occurred..!')\n      } \n    });\n\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { User } from '../model/user';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport 'rxjs/add/operator/map'\nimport {Observable} from 'rxjs';\nimport { Router } from '@angular/router';\nimport { LoginComponent } from '../login/login.component';\nimport { BehaviorSubject } from 'rxjs';\nimport { Headers,RequestOptions } from '@angular/http';\nimport { CommonUtils } from '../model/commonUtils';\n\n@Injectable()\nexport class AuthenticationService {\n\n  private loggedIn = new BehaviorSubject<boolean>(false); \n\n  constructor(private httpclient: HttpClient, private router: Router) {\n    \n\n  }\n\n  getloggedIn()\n  {\n    return this.loggedIn;\n  }\n\n  get isLoggedIn() {\n    return this.loggedIn.asObservable(); \n  }\n\n\n  login(user: User) :any {\n    let userxst=btoa(CommonUtils.appUserKey);\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': \"Basic \" + userxst\n      })\n    };\n\n    return   this.httpclient.post(CommonUtils.appContextpath+\"api/users/authenticate\", user,httpOptions)\n     .map((response: Response) => response);\n   /* .map(\n      actuser => {\n        if (actuser != null) {\n          localStorage.setItem(\"loggeduser\", JSON.stringify(actuser))\n        }\n        return actuser;\n      }\n\n    );*/\n  }\n\n  logout()\n  {\n    localStorage.removeItem(\"loggeduser\");\n    this.loggedIn.next(false);\n    this.router.navigate(['/login']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Posts } from '../model/posts';\nimport { CommonUtils } from '../model/commonUtils';\n\n@Injectable()\nexport class PostinfoService {\n  userxst:String=btoa(CommonUtils.appUserKey);\n   httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': \"Basic \" + this.userxst\n    })\n  };\n  httpUploadOptions = {\n    headers: new HttpHeaders({\n    'Accept':'application/json',\n      'Authorization': \"Basic \" + this.userxst\n    })\n  };\n\n //   'Content-Type':  'application/json', content-type=multipart/*\n  constructor(private httpclient: HttpClient, private router: Router) { \n    \n  }\n\n  uploadF1(formData:any)\n  {\n  return this.httpclient.post(CommonUtils.appContextpath+\"api/fileupload\", formData, this.httpUploadOptions)\n    .map((response: Response) => response);\n   \n  }\n\n  uploadFile(file:any)\n  {\n   return this.httpclient.post(CommonUtils.appContextpath+\"api/fileupload\", file, this.httpUploadOptions)\n    .map((response: Response) => response);\n   \n  }\n\n  getPost()\n  {\n    return   this.httpclient.get(CommonUtils.appContextpath+\"api/posts\",this.httpOptions)\n    .map((response: Response) => response);\n  }\n\n  \naddPost(post:Posts)\n{\n  return   this.httpclient.post(CommonUtils.appContextpath+\"api/posts\",JSON.stringify(post),this.httpOptions)\n  .map((response: Response) => response);\n}\n\nupdatePost(post:Posts)\n{\n  return   this.httpclient.post(CommonUtils.appContextpath+\"api/posts/\"+post.postid,JSON.stringify(post),this.httpOptions)\n  .map((response: Response) => response);\n}\n\ndeletePost(post:Posts)\n{\n  return   this.httpclient.delete(CommonUtils.appContextpath+\"api/posts/\"+post.postid,this.httpOptions)\n  .map((response: Response) => response);\n}\n\n\nsearchPost(post:Posts)\n{\n  return   this.httpclient.post(CommonUtils.appContextpath+\"api/posts/search\",JSON.stringify(post),this.httpOptions)\n  .map((response: Response) => response);\n}\n\ngetPostCat()\n  {\n    return   this.httpclient.get(CommonUtils.appContextpath+\"api/postcategory\",this.httpOptions)\n    .map((response: Response) => response);\n  }\n\n\n}\n\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Quotes } from '../model/quotes';\nimport { CommonUtils } from '../model/commonUtils';\n\n\n@Injectable()\nexport class QuoteinfoService {\n  userxst:String=btoa(CommonUtils.appUserKey);\n   httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': \"Basic \" + this.userxst\n    })\n  };\n  httpUploadOptions = {\n    headers: new HttpHeaders({\n    'Accept':'application/json',\n      'Authorization': \"Basic \" + this.userxst\n    })\n  };\n\n  constructor(private httpclient: HttpClient, private router: Router) { \n    \n  }\n\n  uploadF1(formData:any)\n  {\n  return this.httpclient.post(CommonUtils.appContextpath+\"api/fileupload\", formData, this.httpUploadOptions)\n    .map((response: Response) => response);\n   \n  }\n\n  uploadFile(file:any)\n  {\n   return this.httpclient.post(CommonUtils.appContextpath+\"api/fileupload\", file, this.httpUploadOptions)\n    .map((response: Response) => response);\n   \n  }\n\n  getQuote()\n  {\n    return   this.httpclient.get(CommonUtils.appContextpath+\"api/quotes\",this.httpOptions)\n    .map((response: Response) => response);\n  }\n\n  \naddQuote(quote:Quotes)\n{\n  return   this.httpclient.post(CommonUtils.appContextpath+\"api/quotes\",JSON.stringify(quote),this.httpOptions)\n  .map((response: Response) => response);\n}\n\nupdateQuote(quote:Quotes)\n{\n  return   this.httpclient.post(CommonUtils.appContextpath+\"api/quotes/\"+quote.quoteno,JSON.stringify(quote),this.httpOptions)\n  .map((response: Response) => response);\n}\n\ndeleteQuote(quote:Quotes)\n{\n  return   this.httpclient.delete(CommonUtils.appContextpath+\"api/quotes/\"+quote.quoteno,this.httpOptions)\n  .map((response: Response) => response);\n}\n\n\nsearchQuote(quote:Quotes)\n{\n  return   this.httpclient.post(CommonUtils.appContextpath+\"api/quotes/search\",JSON.stringify(quote),this.httpOptions)\n  .map((response: Response) => response);\n}\n\ngetQuoteCat()\n  {\n    return   this.httpclient.get(CommonUtils.appContextpath+\"api/quotecategory\",this.httpOptions)\n    .map((response: Response) => response);\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}